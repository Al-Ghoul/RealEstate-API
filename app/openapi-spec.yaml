openapi: 3.0.0
info:
  title: RealEstate API
  version: 1.0.0
  description: RealEstate API documentation
paths:
  /api/auth/register:
    post:
      summary: Create a new user
      tags:
        - Auth
      responses:
        "201":
          description: User was created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/User"
        "400":
          description: Input validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "409":
          description: Email already used
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error or Unidentified database error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 9YsD0@example.com
                  description: The email of the user
                  pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                  maxLength: 255
                  minLength: 2
                  title: The email of the user
                password:
                  type: string
                  example: password
                  description: The password of the user
                  pattern: ^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]{8,}$
                  maxLength: 255
                  minLength: 8
                  title: The password of the user
                confirmPassword:
                  type: string
                  example: password
                  description: The password of the user
                firstName:
                  type: string
                  example: John
                  description: The first name of the user
                  pattern: ^[a-zA-Z]+$
                  maxLength: 255
                  minLength: 2
                  title: The first name of the user
                lastName:
                  type: string
                  example: Doe
                  description: The last name of the user
                  pattern: ^[a-zA-Z]+$
                  maxLength: 255
                  minLength: 2
                  title: The last name of the user
  /api/auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 9YsD0@example.com
                  description: The email of the user
                  pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
                  maxLength: 255
                  title: The email of the user
                password:
                  type: string
                  example: password
                  description: The password of the user
                  pattern: ^[a-zA-Z0-9!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]{8,}$
                  maxLength: 255
                  minLength: 8
                  title: The password of the user
      responses:
        "200":
          description: Login was successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The token of the user
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The refresh token of the user
        "400":
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: This user is associated with a social login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/refresh:
    post:
      summary: Refresh current user's tokens
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
      responses:
        "200":
          description: Tokens were refreshed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The token of the user
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The refresh token of the user
        "400":
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Invalid refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Refresh token is blacklisted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/me/logout:
    post:
      summary: Logout current user
      tags:
        - Auth | Me
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Logout was successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/me/request-email-verification-code:
    post:
      summary: Request verification code for current user
      tags:
        - Auth | Me
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Verification code was sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Input validation failed or verification code already sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked, Invalid Token or User does not have an email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: User not found or already verified
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error or Verification code could not be sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/me/verify:
    post:
      summary: Verify current user
      tags:
        - Auth | Me
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 123456
                  description: The verification code
      responses:
        "200":
          description: User was verified successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: Invalid or expired verification code
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/request-password-reset:
    post:
      summary: Request password reset code
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 6bVJt@example.com
                  description: The email of the user
      responses:
        "200":
          description: Password reset code was sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Input validation failed or Reset code already sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: User does not have an email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: User not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/password-reset:
    post:
      summary: Reset user password
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  example: 123456
                  description: The verification code
                password:
                  type: string
                  example: 12345678
                  description: The new password
                confirmPassword:
                  type: string
                  example: 12345678
                  description: The confirmation of new password
      responses:
        "200":
          description: Password was reset successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: Reset code expired or invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/me/change-password:
    post:
      summary: Change current user's password
      tags:
        - Auth | Me
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  example: 12345678
                  description: The current password
                password:
                  type: string
                  example: 12345678
                  description: The new password
                confirmPassword:
                  type: string
                  example: 12345678
                  description: The confirmation of the new password
      responses:
        "200":
          description: Password was changed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Input validation failed or Password is incorrect
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked, Invalid Token or User has no password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: User was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/me/set-password:
    post:
      summary: Set current user's password
      tags:
        - Auth | Me
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: 12345678
                  description: The new password
                confirmPassword:
                  type: string
                  example: 12345678
                  description: The confirmation new password
      responses:
        "200":
          description: Password was set successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/facebook:
    post:
      summary: Login or Register with Facebook
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
      responses:
        "200":
          description: User has logged in successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The token of the user
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The refresh token of the user
        "201":
          description: User was created and logged in successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The token of the user
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The refresh token of the user
        "400":
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "409":
          description: The associated email is already in use
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error or Unidentified database error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/google:
    post:
      summary: Login or Register with Google
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
      responses:
        "200":
          description: User has logged in successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The token of the user
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The refresh token of the user
        "201":
          description: User was created and logged in successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The token of the user
                      refreshToken:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyNzkwMjJ9
                        description: The refresh token of the user
        "400":
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "409":
          description: The associated email is already in use
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error or Unidentified database error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/me/accounts/link:
    post:
      summary: Link an account to the current user
      tags:
        - Auth | Accounts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                  description: The access token of the account to link
                provider:
                  type: string
                  description: The provider of the account to link
                  enum:
                    - google
                    - facebook
      responses:
        "201":
          description: Account was linked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Input validation failed or Account could not be linked
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: User was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "409":
          description: The associated email is already in use
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error or Unidentified database error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  "/api/auth/me/accounts/unlink/{provider}":
    delete:
      summary: Unlink current user's selected provider's account
      tags:
        - Auth | Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: provider
          schema:
            type: string
            enum:
              - google
              - facebook
          required: true
      responses:
        "200":
          description: Account was unlinked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "400":
          description: Input validation failed or User has no password
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: User was not found or Account was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/auth/me/accounts:
    get:
      summary: Get current user's accounts
      tags:
        - Auth | Accounts
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Accounts were retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: "#/components/schemas/Account"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/users/me:
    get:
      summary: Get current user's data
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User was retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/User"
                    properties:
                      hasPassword:
                        type: boolean
                        example: true
                        description: Whether the user has a password
        "401":
          description: Missing authorization header
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "404":
          description: User was not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    patch:
      summary: Update current user's data
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User was updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/users/me/profile:
    get:
      summary: Get current user's profile
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile was retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/Profile"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
    patch:
      summary: Update current user's profile
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User profile was updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    allOf:
                      - $ref: "#/components/schemas/Profile"
        "400":
          description: Input validation failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
  /api/users/me/profile/image:
    put:
      summary: Update current user profile's image
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: The profile image file
      responses:
        "200":
          description: Profile image was updated successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/GenericResponse"
                  - type: object
                properties:
                  data:
                    type: object
                    properties:
                      blurHash:
                        type: string
        "400":
          description: No image provided, Invalid mime type or Unable to upload image
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "401":
          description: Missing authorization token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "403":
          description: Token has been revoked or Invalid Token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          format: uuid
          description: The user ID
        email:
          type: string
        emailVerified:
          readOnly: true
          type: string
          format: date-time
          default: null
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
    Profile:
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the user
        lastName:
          type: string
          description: The last name of the user
        bio:
          type: string
          description: The bio of the user
        image:
          type: string
          description: The image URI of the user
        imageBlurHash:
          type: string
          description: The image's blur hash
        createdAt:
          readOnly: true
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          type: string
          format: date-time
    GenericResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the response
          title: The status of the response
        statusCode:
          type: number
          description: The status code of the response
          title: The status code of the response
        message:
          type: string
          description: The error message
          title: The error message
        details:
          type: string
          description: The error details
          title: The error details
        errors:
          title: The error messages
          type: array
          items:
            type: object
            properties:
              path:
                type: string
                description: The path of the error
                title: The path of the error
              message:
                type: string
                description: The error message
                title: The error message
    Account:
      type: object
      properties:
        userId:
          type: string
          description: The id of the user
          title: The id of the user
        provider:
          type: string
          enum:
            - google
            - facebook
          description: The provider of the account
          title: The provider of the account
        providerAccountId:
          type: string
          description: The id of the account
          title: The id of the account
tags: []
